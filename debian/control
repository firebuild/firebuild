Source: firebuild
Section: non-free/devel
Priority: optional
Maintainer: Balint Reczey <balint@balintreczey.hu>
Build-Depends: bash-completion,
               bats,
               bc,
               clang,
               cmake (>= 3.13),
               debhelper-compat (= 12),
               docbook-xsl,
               fakeroot <!nocheck>,
               gcc (>= 4:10) | gcc-10,
               g++ (>= 4:10) | g++-10,
               libconfig++-dev,
               libjemalloc-dev,
               libtsl-hopscotch-map-dev,
               libxxhash-dev (>= 0.8),
               moreutils,
               po-debconf,
               python3-jinja2,
               xsltproc
Standards-Version: 4.7.2
Homepage: https://firebuild.com
Rules-Requires-Root: no
XS-Autobuild: yes

Package: firebuild
Architecture: any
Depends: ${shlibs:Depends},
         ${misc:Depends},
         ${glibc:Depends},
         libfirebuild0 (= ${binary:Version})
Pre-Depends: debconf | debconf-2.0
Suggests: node-d3
Description: Automatic build accelerator cache
 It works by caching the outputs of executed commands and replaying the
 results when the same commands are executed with the same parameters
 within the same environment.
 .
 The commands can be compilation or other build artifact generation
 steps, tests, or any command that produces predictable output. The
 commands to cache and replay from the cache are determined
 automatically based on firebuild's configuration and each command's
 and its children's observed behavior.
 .
 Firebuild supports caching compilation results of C, C++, Fortran, Java,
 Rust, Scala and other compilers and outputs of scripts written in Bash,
 Perl, Python and other interpreted languages.

Package: libfirebuild0
Section: non-free/libs
Architecture: any
Multi-Arch: same
Depends: ${shlibs:Depends},
         ${misc:Depends},
         ${glibc:Depends}
Pre-Depends: debconf | debconf-2.0
Description: Automatic build accelerator cache - shared library
 It works by caching the outputs of executed commands and replaying the
 results when the same commands are executed with the same parameters
 within the same environment.
 .
 The commands can be compilation or other build artifact generation
 steps, tests, or any command that produces predictable output. The
 commands to cache and replay from the cache are determined
 automatically based on firebuild's configuration and each command's
 and its children's observed behavior.
 .
 Firebuild supports caching compilation results of C, C++, Fortran, Java,
 Rust, Scala and other compilers and outputs of scripts written in Bash,
 Perl, Python and other interpreted languages.
 .
 This package provides the shared library preloaded by the intercepted
 processes.
